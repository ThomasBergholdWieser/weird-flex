// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeirdFlex.Data.EF;

namespace WeirdFlex.Data.EF.Migrations
{
    [DbContext(typeof(FlexContext))]
    partial class FlexContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WeirdFlex.Data.Model.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseType")
                        .HasColumnType("int");

                    b.Property<string>("ImageRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ExerciseType = 3,
                            Name = "Running"
                        },
                        new
                        {
                            Id = 2L,
                            ExerciseType = 3,
                            Name = "Swimming"
                        },
                        new
                        {
                            Id = 3L,
                            ExerciseType = 3,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 4L,
                            ExerciseType = 3,
                            Name = "Rowing"
                        },
                        new
                        {
                            Id = 5L,
                            ExerciseType = 2,
                            Name = "Climbing"
                        },
                        new
                        {
                            Id = 6L,
                            ExerciseType = 2,
                            Name = "Plank"
                        },
                        new
                        {
                            Id = 7L,
                            ExerciseType = 2,
                            Name = "Hanging"
                        },
                        new
                        {
                            Id = 8L,
                            ExerciseType = 0,
                            Name = "Situps (Regular)"
                        },
                        new
                        {
                            Id = 9L,
                            ExerciseType = 0,
                            Name = "Leg Raised Situps"
                        },
                        new
                        {
                            Id = 10L,
                            ExerciseType = 0,
                            Name = "Abdominal Reverse Curl"
                        },
                        new
                        {
                            Id = 11L,
                            ExerciseType = 0,
                            Name = "Hanging Leg Raise"
                        },
                        new
                        {
                            Id = 12L,
                            ExerciseType = 0,
                            Name = "Pull-Up (Wide)"
                        },
                        new
                        {
                            Id = 13L,
                            ExerciseType = 0,
                            Name = "Chin-Up (Regular)"
                        },
                        new
                        {
                            Id = 14L,
                            ExerciseType = 0,
                            Name = "Dips"
                        },
                        new
                        {
                            Id = 15L,
                            Equipment = "Barbell",
                            ExerciseType = 1,
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 16L,
                            Equipment = "Barbell",
                            ExerciseType = 1,
                            Name = "Squats"
                        },
                        new
                        {
                            Id = 17L,
                            Equipment = "Barbell",
                            ExerciseType = 1,
                            Name = "Deadlift"
                        },
                        new
                        {
                            Id = 18L,
                            Equipment = "Barbell",
                            ExerciseType = 1,
                            Name = "Front/Push Press"
                        },
                        new
                        {
                            Id = 19L,
                            Equipment = "Barbell",
                            ExerciseType = 1,
                            Name = "Bentover Row"
                        },
                        new
                        {
                            Id = 20L,
                            Equipment = "Cable",
                            ExerciseType = 1,
                            Name = "Face Pull"
                        },
                        new
                        {
                            Id = 21L,
                            Equipment = "Cable",
                            ExerciseType = 1,
                            Name = "Triceps Pushdown"
                        },
                        new
                        {
                            Id = 22L,
                            Equipment = "Cable",
                            ExerciseType = 1,
                            Name = "Seated Row"
                        },
                        new
                        {
                            Id = 23L,
                            Equipment = "Cable",
                            ExerciseType = 1,
                            Name = "Standing Chest Press"
                        },
                        new
                        {
                            Id = 24L,
                            Equipment = "Cable",
                            ExerciseType = 1,
                            Name = "Unilateral High Flye"
                        },
                        new
                        {
                            Id = 25L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Shoulder Press"
                        },
                        new
                        {
                            Id = 26L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Lateral Raise"
                        },
                        new
                        {
                            Id = 27L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Front Raise"
                        },
                        new
                        {
                            Id = 28L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "One Arm Row"
                        },
                        new
                        {
                            Id = 29L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Hammer Curl"
                        },
                        new
                        {
                            Id = 30L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Bench Press"
                        },
                        new
                        {
                            Id = 31L,
                            Equipment = "Dumbbell",
                            ExerciseType = 1,
                            Name = "Flye"
                        });
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.ExerciseInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("TrainingPlanInstanceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TrainingPlanInstanceId");

                    b.ToTable("ExerciseInstances");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.ExerciseSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<long>("ExerciseInstanceId")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseInstanceId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ImageRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastExecution")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingPlans");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlanExercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("ExerciseId")
                        .HasColumnType("bigint");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("TrainingPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanExercises");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlanInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrainingPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanInstances");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Uid")
                        .IsUnique()
                        .HasFilter("[Uid] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.ExerciseInstance", b =>
                {
                    b.HasOne("WeirdFlex.Data.Model.Exercise", "Exercise")
                        .WithMany("PerformedIn")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeirdFlex.Data.Model.TrainingPlanInstance", "TrainingPlanInstance")
                        .WithMany("PerformedExercises")
                        .HasForeignKey("TrainingPlanInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("TrainingPlanInstance");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.ExerciseSet", b =>
                {
                    b.HasOne("WeirdFlex.Data.Model.ExerciseInstance", "ExerciseInstance")
                        .WithMany("Sets")
                        .HasForeignKey("ExerciseInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseInstance");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlan", b =>
                {
                    b.HasOne("WeirdFlex.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlanExercise", b =>
                {
                    b.HasOne("WeirdFlex.Data.Model.Exercise", "Exercise")
                        .WithMany("PlannedIn")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeirdFlex.Data.Model.TrainingPlan", "TrainingPlan")
                        .WithMany("PlannedExercises")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlanInstance", b =>
                {
                    b.HasOne("WeirdFlex.Data.Model.TrainingPlan", "TrainingPlan")
                        .WithMany("Executions")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.Exercise", b =>
                {
                    b.Navigation("PerformedIn");

                    b.Navigation("PlannedIn");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.ExerciseInstance", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlan", b =>
                {
                    b.Navigation("Executions");

                    b.Navigation("PlannedExercises");
                });

            modelBuilder.Entity("WeirdFlex.Data.Model.TrainingPlanInstance", b =>
                {
                    b.Navigation("PerformedExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
